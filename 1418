
//SINGLETON
var mySingleton = (function (){
  var instance;
  function init(){
  };
  return {
    getInstance: function () {
      if ( !instance ) {
        instance = init();
      }
      return instance;
    }}();
var singleA = mySingleton;
var singleB = mySingleton;
console.log( singleA === singleB );



//FACTORY METHOD
function Car( options ) {
  this.state = options.state || "new";
  this.color = options.color || "white";
}
function VehicleFactory() {}
VehicleFactory.prototype.vehicleClass = Car;
VehicleFactory.prototype.createVehicle = function ( options ) {
  if( options.vehicleType === "car" ){
    this.vehicleClass = Car;
  }
  return new this.vehicleClass( options );
};


//PROTOTYPE
var Person = {  
    numFeet: 2,  
    numHeads: 1,  
    numHands:2  
};  
var rom = Object.create(Person);  
console.log(rom.numHeads); 
rom.numHeads = 1;  



//CONSTRUCTOR
function vehicle( model, year, miles ) {
  this.model = model;
  this.year = year;
}
var accord = new vehicle( "Honda Accord", 2002 );
var focus = new vehicle ( "Ford Focus", 2004 );


//DECORATOR
function vehicle( vehicleType ){  
}  
var truck = new vehicle('truck');   
truck.setModel = function( model ){  
    this.model = model;  
}  
truck.setYear = function( year ){  
    this.year = year;  
}  


